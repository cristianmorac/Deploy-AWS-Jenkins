pipeline {
    agent any

    tools {
    nodejs 'Node-app'
}

    environment {
        SONAR_HOST_URL = 'http://localhost:9000'
    }

    stages {
        stage('checkout'){
            steps {
                checkout scm
            }
        }

        stage('install dependencies') {
            steps {
                dir('app-front') {
                    sh 'npm install'
                }
            }
        }

        stage('Test') {
            steps {
                dir('app-front') {
                    sh 'npm test -- --coverage --watchAll=false'
                }
            }
        }

        stage('SonarQube Analysis'){
            steps {
                withCredentials([string(credentialsId: 'TOKEN_SONAR', variable:'TOKEN')]) {
                    sh """
                        cd app-front
                        sonar-scanner -X -Dsonar.token=$TOKEN -Dsonar.host.url=$SONAR_HOST_URL \
                        """
                }
            }
        }

        stage('Build React App') {
            steps {
                dir('app-front') {
                    sh 'npm run build'
                }
            }
        }

        stage('Archive Build') {
            steps {
                archiveArtifacts artifacts: 'app-front/build/**', fingerprint: true
            }
        }

        stage('Build Docker Image') {
            steps {
                dir('app-front') {
                    script {
                        sh '''
                            IMAGE_NAME="app-front"
                            BUILD_NUMBER="${BUILD_NUMBER}"
                            docker build -t ${IMAGE_NAME}:${BUILD_NUMBER} .
                        '''
                    }
                }
            }
        }

        stage('Push Docker Image') {
            steps {
                withCredentials([usernamePassword(credentialsId: 'DOCKER', usernameVariable: 'DOCKER_USER', passwordVariable: 'DOCKER_PASS')]) {
                    sh """
                        echo "$DOCKER_PASS" | docker login -u "$DOCKER_USER" --password-stdin
                        docker tag ${IMAGE_NAME}:${BUILD_NUMBER} tlian0206/${IMAGE_NAME}:${BUILD_NUMBER}
                        docker push tlian0206/${IMAGE_NAME}:${BUILD_NUMBER}
                    """
                }
            }
        }

    }
    post {
        always {
            cleanWs()
        }
        success {
            echo '✅ SonarQube Analysis y Build Ok.'
            }
        failure {
            echo '❌ SonarQube fallo.'
        }
    }
}
